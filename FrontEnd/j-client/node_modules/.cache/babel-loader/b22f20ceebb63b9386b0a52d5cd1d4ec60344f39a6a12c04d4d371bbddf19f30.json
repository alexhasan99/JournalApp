{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamad H\\\\Desktop\\\\KTH\\\\TIDAA3\\\\Fullstack\\\\labbar\\\\Front\\\\FrontEnd\\\\j-client\\\\src\\\\components\\\\PrivateRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\n//import {retrieveUserFromLocalStorage} from \"./retrieveUserFromLocalStorage\";\n\n// PrivateRoute component to guard routes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children,\n  allowedUserTypes\n}) => {\n  _s();\n  //const navigate = useNavigate();\n  //const { user } = useContext(UserContext);\n  //const storedUser = localStorage.getItem('currentUser');\n  const storedUser = sessionStorage.getItem('currentUserLoggedIn');\n  const user = storedUser ? JSON.parse(storedUser) : null;\n  let location = useLocation();\n  const isNotAuth = !user || !allowedUserTypes.includes(user.userType);\n  console.log(\"The usertype: \" + (user === null || user === void 0 ? void 0 : user.userType));\n  if (isNotAuth) {\n    // Redirect to the unauthorized page if user is not authenticated\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/unauthorized\",\n      state: {\n        from: location\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Render the route's element if user is authenticated\n  return children ? children : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 34\n  }, this);\n};\n_s(PrivateRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","useLocation","jsxDEV","_jsxDEV","PrivateRoute","children","allowedUserTypes","_s","storedUser","sessionStorage","getItem","user","JSON","parse","location","isNotAuth","includes","userType","console","log","to","state","from","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mohamad H/Desktop/KTH/TIDAA3/Fullstack/labbar/Front/FrontEnd/j-client/src/components/PrivateRoute.tsx"],"sourcesContent":["\r\nimport React, {useContext} from \"react\";\r\nimport {UserContext} from \"./UserSession\";\r\nimport {Navigate, Outlet, Route, useLocation} from \"react-router-dom\";\r\n//import {retrieveUserFromLocalStorage} from \"./retrieveUserFromLocalStorage\";\r\n\r\n\r\n\r\n\r\n// PrivateRoute component to guard routes\r\nconst PrivateRoute = ({  children, allowedUserTypes  } : any) => {\r\n    //const navigate = useNavigate();\r\n    //const { user } = useContext(UserContext);\r\n    //const storedUser = localStorage.getItem('currentUser');\r\n    const storedUser = sessionStorage.getItem('currentUserLoggedIn');\r\n    const user = storedUser ? JSON.parse(storedUser) : null;\r\n    let location = useLocation();\r\n\r\n    const isNotAuth = !user || !allowedUserTypes.includes(user.userType);\r\n\r\n    console.log(\"The usertype: \" + user?.userType);\r\n\r\n    if (isNotAuth) {\r\n        // Redirect to the unauthorized page if user is not authenticated\r\n        return <Navigate to=\"/unauthorized\"  state = {{from: location}}/>;\r\n    }\r\n\r\n\r\n    // Render the route's element if user is authenticated\r\n    return children ? children : <Outlet/>;\r\n};\r\n\r\nexport default PrivateRoute;"],"mappings":";;AACA,OAAOA,KAAK,MAAoB,OAAO;AAEvC,SAAQC,QAAQ,EAAEC,MAAM,EAASC,WAAW,QAAO,kBAAkB;AACrE;;AAKA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAGC,QAAQ;EAAEC;AAAwB,CAAC,KAAK;EAAAC,EAAA;EAC7D;EACA;EACA;EACA,MAAMC,UAAU,GAAGC,cAAc,CAACC,OAAO,CAAC,qBAAqB,CAAC;EAChE,MAAMC,IAAI,GAAGH,UAAU,GAAGI,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,GAAG,IAAI;EACvD,IAAIM,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE5B,MAAMc,SAAS,GAAG,CAACJ,IAAI,IAAI,CAACL,gBAAgB,CAACU,QAAQ,CAACL,IAAI,CAACM,QAAQ,CAAC;EAEpEC,OAAO,CAACC,GAAG,CAAC,gBAAgB,IAAGR,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,QAAQ,EAAC;EAE9C,IAAIF,SAAS,EAAE;IACX;IACA,oBAAOZ,OAAA,CAACJ,QAAQ;MAACqB,EAAE,EAAC,eAAe;MAAEC,KAAK,EAAI;QAACC,IAAI,EAAER;MAAQ;IAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EACrE;;EAGA;EACA,OAAOrB,QAAQ,GAAGA,QAAQ,gBAAGF,OAAA,CAACH,MAAM;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC1C,CAAC;AAACnB,EAAA,CApBIH,YAAY;EAAA,QAMCH,WAAW;AAAA;AAAA0B,EAAA,GANxBvB,YAAY;AAsBlB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}