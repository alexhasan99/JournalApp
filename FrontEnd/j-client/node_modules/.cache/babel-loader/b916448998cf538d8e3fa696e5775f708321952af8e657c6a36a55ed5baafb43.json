{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamad H\\\\Desktop\\\\KTH\\\\TIDAA3\\\\Fullstack\\\\labbar\\\\Front\\\\FrontEnd\\\\j-client\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport { Button } from 'primereact/button';\nimport { Card } from 'primereact/card';\nimport { httpClient } from './components/HttpClient';\nimport Keycloak from 'keycloak-js';\n\n/*\r\n  Init Options\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initOptions = {\n  url: \"http://localhost:8090/\",\n  realm: \"Journal\",\n  clientId: \"frontend\"\n};\nlet kc = new Keycloak(initOptions);\nfunction Login() {\n  _s();\n  const [infoMessage, setInfoMessage] = useState('');\n  const navigate = useNavigate();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    if (!isKeycloakInitialized) {\n      kc.init({\n        onLoad: 'login-required',\n        checkLoginIframe: true,\n        pkceMethod: 'S256'\n      }).then(auth => {\n        if (!auth) {\n          window.location.reload();\n        } else {\n          console.info(\"Authenticated\");\n          sessionStorage.setItem('token', kc.token);\n          setIsAuthenticated(true); // Uppdatera staten för att visa att användaren är autentiserad\n          navigate('/home'); // Omdirigera till hemskärmen\n          isKeycloakInitialized = true; // Uppdatera flaggan efter en lyckad initialisering\n        }\n      }).catch(() => {\n        console.error(\"Authentication Failed\");\n      });\n    }\n  }, [navigate]);\n\n  /* To demonstrate : http client adds the access token to the Authorization header */\n  const callBackend = () => {\n    httpClient.get('https://mockbin.com/request');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Secured React App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setInfoMessage(kc.authenticated ? 'Authenticated: TRUE' : 'Authenticated: FALSE'),\n            className: \"m-1 custom-btn-style\",\n            label: \"Is Authenticated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => kc.login(),\n            className: \"m-1 custom-btn-style\",\n            label: \"Login\",\n            severity: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setInfoMessage(kc.token),\n            className: \"m-1 custom-btn-style\",\n            label: \"Show Access Token\",\n            severity: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setInfoMessage(JSON.stringify(kc.tokenParsed)),\n            className: \"m-1 custom-btn-style\",\n            label: \"Show Parsed Access token\",\n            severity: \"warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setInfoMessage(kc.isTokenExpired(5).toString()),\n            className: \"m-1 custom-btn-style\",\n            label: \"Check Token expired\",\n            severity: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => kc.updateToken(10).then(refreshed => {\n              setInfoMessage('Token Refreshed: ' + refreshed.toString());\n            }, e => {\n              setInfoMessage('Refresh Error');\n            }),\n            className: \"m-1 custom-btn-style\",\n            label: \"Update Token (if about to expire)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: callBackend,\n            className: \"m-1 custom-btn-style\",\n            label: \"Send HTTP Request\",\n            severity: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => kc.logout({\n              redirectUri: 'http://localhost:3000/'\n            }),\n            className: \"m-1 custom-btn-style\",\n            label: \"Logout\",\n            severity: \"danger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setInfoMessage(kc.hasRealmRole('admin').toString()),\n            className: \"m-1 custom-btn-style\",\n            label: \"Has realm role \\\"Admin\\\"\",\n            severity: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setInfoMessage(kc.hasResourceRole('test').toString()),\n            className: \"m-1 custom-btn-style\",\n            label: \"Has client role \\\"test\\\"\",\n            severity: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              wordBreak: 'break-all'\n            },\n            id: \"infoPanel\",\n            children: infoMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"k/c5MMNWd8eBtBHduQURV08h118=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Button","Card","httpClient","Keycloak","jsxDEV","_jsxDEV","initOptions","url","realm","clientId","kc","Login","_s","infoMessage","setInfoMessage","navigate","isAuthenticated","setIsAuthenticated","isKeycloakInitialized","init","onLoad","checkLoginIframe","pkceMethod","then","auth","window","location","reload","console","info","sessionStorage","setItem","token","catch","error","callBackend","get","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","authenticated","label","login","severity","JSON","stringify","tokenParsed","isTokenExpired","toString","updateToken","refreshed","e","logout","redirectUri","hasRealmRole","hasResourceRole","style","wordBreak","id","_c","$RefreshReg$"],"sources":["C:/Users/Mohamad H/Desktop/KTH/TIDAA3/Fullstack/labbar/Front/FrontEnd/j-client/src/Login.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport \"primereact/resources/themes/lara-light-indigo/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport { Button } from 'primereact/button';\r\nimport { Card } from 'primereact/card';\r\nimport { httpClient } from './components/HttpClient';\r\n\r\nimport Keycloak from 'keycloak-js';\r\n\r\n/*\r\n  Init Options\r\n*/\r\nlet initOptions = {\r\n  url: \"http://localhost:8090/\",\r\n    realm: \"Journal\",\r\n    clientId: \"frontend\",\r\n}\r\n\r\nlet kc = new Keycloak(initOptions);\r\n\r\n\r\nfunction Login() {\r\n  const [infoMessage, setInfoMessage] = useState('');\r\n  const navigate = useNavigate();\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!isKeycloakInitialized) {\r\n      kc.init({\r\n        onLoad: 'login-required',\r\n        checkLoginIframe: true,\r\n        pkceMethod: 'S256',\r\n      }).then((auth) => {\r\n        if (!auth) {\r\n          window.location.reload();\r\n        } else {\r\n          console.info(\"Authenticated\");\r\n          sessionStorage.setItem('token', kc.token);\r\n          setIsAuthenticated(true); // Uppdatera staten för att visa att användaren är autentiserad\r\n          navigate('/home'); // Omdirigera till hemskärmen\r\n          isKeycloakInitialized = true; // Uppdatera flaggan efter en lyckad initialisering\r\n        }\r\n      }).catch(() => {\r\n        console.error(\"Authentication Failed\");\r\n      });\r\n    }\r\n  }, [navigate]);\r\n\r\n\r\n  /* To demonstrate : http client adds the access token to the Authorization header */\r\n  const callBackend = () => {\r\n    httpClient.get('https://mockbin.com/request')\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <div className='grid'>\r\n        <div className='col-12'>\r\n          <h1>My Secured React App</h1>\r\n        </div>\r\n      </div>\r\n  \r\n      <div className='grid'>\r\n        <div className='col-1'></div>\r\n        <div className='col-2'>\r\n          <div className=\"col\">\r\n            {/* Knapp för att kontrollera autentiseringsstatus */}\r\n            <Button onClick={() => setInfoMessage(kc.authenticated ? 'Authenticated: TRUE' : 'Authenticated: FALSE')}\r\n                    className=\"m-1 custom-btn-style\"\r\n                    label='Is Authenticated' />\r\n  \r\n            {/* Knapp för att logga in */}\r\n            <Button onClick={() => kc.login()}\r\n                    className='m-1 custom-btn-style'\r\n                    label='Login'\r\n                    severity=\"success\" />\r\n  \r\n            {/* Knapp för att visa access token */}\r\n            <Button onClick={() => setInfoMessage(kc.token)}\r\n                    className=\"m-1 custom-btn-style\"\r\n                    label='Show Access Token'\r\n                    severity=\"info\" />\r\n  \r\n            {/* Knapp för att visa parsat access token */}\r\n            <Button onClick={() => setInfoMessage(JSON.stringify(kc.tokenParsed))}\r\n                    className=\"m-1 custom-btn-style\"\r\n                    label='Show Parsed Access token'\r\n                    severity=\"warning\" />\r\n  \r\n            {/* Knapp för att kontrollera om token har löpt ut */}\r\n            <Button onClick={() => setInfoMessage(kc.isTokenExpired(5).toString())}\r\n                    className=\"m-1 custom-btn-style\"\r\n                    label='Check Token expired'\r\n                    severity=\"info\" />\r\n  \r\n            {/* Knapp för att uppdatera token */}\r\n            <Button onClick={() => kc.updateToken(10).then((refreshed) => {\r\n                          setInfoMessage('Token Refreshed: ' + refreshed.toString());\r\n                        }, (e) => {\r\n                          setInfoMessage('Refresh Error');\r\n                        })}\r\n                    className=\"m-1 custom-btn-style\"\r\n                    label='Update Token (if about to expire)' />\r\n  \r\n            {/* Knapp för att skicka HTTP-förfrågan */}\r\n            <Button onClick={callBackend}\r\n                    className='m-1 custom-btn-style'\r\n                    label='Send HTTP Request'\r\n                    severity=\"success\" />\r\n  \r\n            {/* Knapp för att logga ut */}\r\n            <Button onClick={() => kc.logout({ redirectUri: 'http://localhost:3000/' })}\r\n                    className=\"m-1 custom-btn-style\"\r\n                    label='Logout'\r\n                    severity=\"danger\" />\r\n  \r\n            {/* Knapp för att kontrollera om användaren har rollen \"admin\" */}\r\n            <Button onClick={() => setInfoMessage(kc.hasRealmRole('admin').toString())}\r\n                    className=\"m-1 custom-btn-style\"\r\n                    label='Has realm role \"Admin\"'\r\n                    severity=\"info\" />\r\n  \r\n            {/* Knapp för att kontrollera om användaren har klientrollen \"test\" */}\r\n            <Button onClick={() => setInfoMessage(kc.hasResourceRole('test').toString())}\r\n                    className=\"m-1 custom-btn-style\"\r\n                    label='Has client role \"test\"'\r\n                    severity=\"info\" />\r\n          </div>\r\n        </div>\r\n        <div className='col-6'>\r\n          <Card>\r\n            <p style={{ wordBreak: 'break-all' }} id='infoPanel'>\r\n              {infoMessage}\r\n            </p>\r\n          </Card>\r\n        </div>\r\n        <div className='col-2'></div>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n  \r\n  export default Login;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}