{"ast":null,"code":"// keycloak.js\nimport Keycloak from 'keycloak-js';\nconst initOptions = {\n  url: process.env.REACT_APP_URL,\n  realm: process.env.REACT_APP_REALM,\n  clientId: process.env.REACT_APP_CLIENT_ID\n};\nconst kc = new Keycloak(initOptions);\nlet isKeycloakInitialized = false;\nexport const initializeKeycloak = () => {\n  if (isKeycloakInitialized) {\n    console.log(\"Keycloak instance is already initialized.\");\n    // Kontrollera om anv채ndaren redan 채r autentiserad\n    return Promise.resolve({\n      kc,\n      authenticated: kc.authenticated\n    });\n  }\n  return kc.init({\n    onLoad: 'login-required',\n    checkLoginIframe: true,\n    pkceMethod: 'S256'\n  }).then(authenticated => {\n    if (!authenticated) {\n      window.location.reload();\n    }\n    console.info(\"Authenticated\");\n    sessionStorage.setItem('token', kc.token);\n    isKeycloakInitialized = true;\n    return {\n      kc,\n      authenticated\n    };\n  }).catch(error => {\n    console.error(\"Authentication Failed\", error);\n    throw error;\n  });\n};\nexport default kc;","map":{"version":3,"names":["Keycloak","initOptions","url","process","env","REACT_APP_URL","realm","REACT_APP_REALM","clientId","REACT_APP_CLIENT_ID","kc","isKeycloakInitialized","initializeKeycloak","console","log","Promise","resolve","authenticated","init","onLoad","checkLoginIframe","pkceMethod","then","window","location","reload","info","sessionStorage","setItem","token","catch","error"],"sources":["C:/Users/Mohamad H/Desktop/KTH/TIDAA3/Fullstack/labbar/Front/FrontEnd/j-client/src/keycloak.js"],"sourcesContent":["// keycloak.js\r\nimport Keycloak from 'keycloak-js';\r\n\r\n\r\nconst initOptions = {\r\n  url: process.env.REACT_APP_URL,\r\n  realm: process.env.REACT_APP_REALM,\r\n  clientId: process.env.REACT_APP_CLIENT_ID,\r\n};\r\n\r\nconst kc = new Keycloak(initOptions);\r\nlet isKeycloakInitialized = false;\r\n\r\nexport const initializeKeycloak = () => {\r\n  if (isKeycloakInitialized) {\r\n    console.log(\"Keycloak instance is already initialized.\");\r\n    // Kontrollera om anv채ndaren redan 채r autentiserad\r\n    return Promise.resolve({ kc, authenticated: kc.authenticated });\r\n  }\r\n  \r\n  return kc.init({\r\n    onLoad: 'login-required',\r\n    checkLoginIframe: true,\r\n    pkceMethod: 'S256',\r\n  }).then(authenticated => {\r\n    if (!authenticated) {\r\n      window.location.reload();\r\n    }\r\n    console.info(\"Authenticated\");\r\n    sessionStorage.setItem('token', kc.token);\r\n    isKeycloakInitialized = true;\r\n    return { kc, authenticated };\r\n  }).catch(error => {\r\n    console.error(\"Authentication Failed\", error);\r\n    throw error;\r\n  });\r\n};\r\n\r\nexport default kc;\r\n"],"mappings":"AAAA;AACA,OAAOA,QAAQ,MAAM,aAAa;AAGlC,MAAMC,WAAW,GAAG;EAClBC,GAAG,EAAEC,OAAO,CAACC,GAAG,CAACC,aAAa;EAC9BC,KAAK,EAAEH,OAAO,CAACC,GAAG,CAACG,eAAe;EAClCC,QAAQ,EAAEL,OAAO,CAACC,GAAG,CAACK;AACxB,CAAC;AAED,MAAMC,EAAE,GAAG,IAAIV,QAAQ,CAACC,WAAW,CAAC;AACpC,IAAIU,qBAAqB,GAAG,KAAK;AAEjC,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EACtC,IAAID,qBAAqB,EAAE;IACzBE,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;IACxD;IACA,OAAOC,OAAO,CAACC,OAAO,CAAC;MAAEN,EAAE;MAAEO,aAAa,EAAEP,EAAE,CAACO;IAAc,CAAC,CAAC;EACjE;EAEA,OAAOP,EAAE,CAACQ,IAAI,CAAC;IACbC,MAAM,EAAE,gBAAgB;IACxBC,gBAAgB,EAAE,IAAI;IACtBC,UAAU,EAAE;EACd,CAAC,CAAC,CAACC,IAAI,CAACL,aAAa,IAAI;IACvB,IAAI,CAACA,aAAa,EAAE;MAClBM,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B;IACAZ,OAAO,CAACa,IAAI,CAAC,eAAe,CAAC;IAC7BC,cAAc,CAACC,OAAO,CAAC,OAAO,EAAElB,EAAE,CAACmB,KAAK,CAAC;IACzClB,qBAAqB,GAAG,IAAI;IAC5B,OAAO;MAAED,EAAE;MAAEO;IAAc,CAAC;EAC9B,CAAC,CAAC,CAACa,KAAK,CAACC,KAAK,IAAI;IAChBlB,OAAO,CAACkB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb,CAAC,CAAC;AACJ,CAAC;AAED,eAAerB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}