{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamad H\\\\Desktop\\\\KTH\\\\TIDAA3\\\\Fullstack\\\\labbar\\\\Front\\\\FrontEnd\\\\j-client\\\\src\\\\components\\\\LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { users } from \"../utils/mockData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginStatus, setLoginStatus] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleUsernameChange = e => {\n    setUsername(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIsLoading(true);\n    // Simulate loading for 1 second\n    setTimeout(() => {\n      const matchedUser = users.find(user => user.username === username && user.password === password);\n      if (matchedUser) {\n        setLoginStatus('Login successful');\n        // Add logic for successful login\n        if (matchedUser.role === 'patient') {\n          // Redirect to patient page\n          // Replace the URL with the correct route for the patient page\n          navigate('/patient');\n        } else if (matchedUser.role === 'doctor') {\n          // Redirect to doctor page\n          // Replace the URL with the correct route for the doctor page\n          navigate('/doctor');\n        }\n      } else {\n        setLoginStatus('Invalid credentials');\n        // Add logic for handling invalid credentials\n      }\n\n      setIsLoading(false);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: handleUsernameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: handlePasswordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 27\n    }, this), loginStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: loginStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"0oIMsuc2FNR48KEDdXqi1UFbd+U=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","users","jsxDEV","_jsxDEV","LoginPage","_s","navigate","username","setUsername","password","setPassword","loginStatus","setLoginStatus","isLoading","setIsLoading","handleUsernameChange","e","target","value","handlePasswordChange","handleSubmit","preventDefault","setTimeout","matchedUser","find","user","role","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Mohamad H/Desktop/KTH/TIDAA3/Fullstack/labbar/Front/FrontEnd/j-client/src/components/LoginPage.tsx"],"sourcesContent":["import React, { ChangeEvent, FormEvent, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport {users} from \"../utils/mockData\";\r\n\r\nconst LoginPage = () => {\r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loginStatus, setLoginStatus] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleUsernameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setUsername(e.target.value);\r\n    };\r\n\r\n    const handlePasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        // Simulate loading for 1 second\r\n        setTimeout(() => {\r\n            const matchedUser = users.find(\r\n                (user) => user.username === username && user.password === password\r\n            );\r\n            if (matchedUser) {\r\n                setLoginStatus('Login successful');\r\n                // Add logic for successful login\r\n                if (matchedUser.role === 'patient') {\r\n                    // Redirect to patient page\r\n                    // Replace the URL with the correct route for the patient page\r\n                    navigate('/patient');\r\n                } else if (matchedUser.role === 'doctor') {\r\n                    // Redirect to doctor page\r\n                    // Replace the URL with the correct route for the doctor page\r\n                    navigate('/doctor');\r\n                }\r\n            } else {\r\n                setLoginStatus('Invalid credentials');\r\n                // Add logic for handling invalid credentials\r\n            }\r\n            setIsLoading(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Username:</label>\r\n                    <input type=\"text\" value={username} onChange={handleUsernameChange} />\r\n                </div>\r\n                <div>\r\n                    <label>Password:</label>\r\n                    <input type=\"password\" value={password} onChange={handlePasswordChange} />\r\n                </div>\r\n                <button type=\"submit\">Log in</button>\r\n            </form>\r\n            {isLoading && <p>Loading...</p>}\r\n            {loginStatus && <p>{loginStatus}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}