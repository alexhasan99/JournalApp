{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamad H\\\\Desktop\\\\KTH\\\\TIDAA3\\\\Fullstack\\\\labbar\\\\Front\\\\FrontEnd\\\\j-client\\\\src\\\\components\\\\DrawingForm.tsx\",\n  _s = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport ApiService from \"../services/ApiServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Assuming createImage function exists\n\nconst DrawingForm = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [text, setText] = useState(''); // State for text input\n  const [textPosition, setTextPosition] = useState({\n    x: 100,\n    y: 100\n  }); // Initial position\n  const [isDrawing, setIsDrawing] = useState(false);\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const [path, setPath] = useState([]);\n  const [undoStack, setUndoStack] = useState([]);\n  const [redoStack, setRedoStack] = useState([]);\n  const [selectedImageId, setSelectedImageId] = useState(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      canvas.width = 600; // Set the desired width\n      canvas.height = 500; // Set the desired height\n      canvas.style.width = '600px'; // Set the desired width\n      canvas.style.height = '500px'; // Set the desired height\n\n      const context = canvas.getContext('2d');\n      if (context) {\n        context.lineCap = 'round';\n        context.strokeStyle = 'black';\n        context.lineWidth = 5;\n        contextRef.current = context;\n      }\n    }\n  }, []);\n  const startDrawing = ({\n    nativeEvent\n  }) => {\n    var _contextRef$current, _contextRef$current2;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    (_contextRef$current = contextRef.current) === null || _contextRef$current === void 0 ? void 0 : _contextRef$current.beginPath();\n    (_contextRef$current2 = contextRef.current) === null || _contextRef$current2 === void 0 ? void 0 : _contextRef$current2.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n    setPath([{\n      x: offsetX,\n      y: offsetY\n    }]);\n  };\n  const finishDrawing = () => {\n    if (isDrawing) {\n      setUndoStack([...undoStack, path]);\n      setRedoStack([]);\n    }\n    setIsDrawing(false);\n  };\n  const draw = ({\n    nativeEvent\n  }) => {\n    if (!isDrawing) {\n      return;\n    }\n    if (contextRef.current) {\n      const {\n        offsetX,\n        offsetY\n      } = nativeEvent;\n      contextRef.current.lineTo(offsetX, offsetY);\n      contextRef.current.stroke();\n    }\n  };\n  const redrawCanvas = paths => {\n    var _contextRef$current3;\n    (_contextRef$current3 = contextRef.current) === null || _contextRef$current3 === void 0 ? void 0 : _contextRef$current3.clearRect(0, 0, 600, 500);\n    paths.forEach((path, index) => {\n      if (index < paths.length - 1) {\n        var _contextRef$current4, _contextRef$current5;\n        (_contextRef$current4 = contextRef.current) === null || _contextRef$current4 === void 0 ? void 0 : _contextRef$current4.beginPath();\n        (_contextRef$current5 = contextRef.current) === null || _contextRef$current5 === void 0 ? void 0 : _contextRef$current5.moveTo(path[0].x, path[0].y);\n        path.forEach(({\n          x,\n          y\n        }) => {\n          var _contextRef$current6, _contextRef$current7;\n          (_contextRef$current6 = contextRef.current) === null || _contextRef$current6 === void 0 ? void 0 : _contextRef$current6.lineTo(x, y);\n          (_contextRef$current7 = contextRef.current) === null || _contextRef$current7 === void 0 ? void 0 : _contextRef$current7.stroke();\n        });\n      }\n    });\n  };\n  const clearAll = () => {\n    var _contextRef$current8;\n    (_contextRef$current8 = contextRef.current) === null || _contextRef$current8 === void 0 ? void 0 : _contextRef$current8.clearRect(0, 0, 600, 500);\n    setUndoStack([]);\n    setRedoStack([]);\n  };\n  const handleSelectImage = async imageId => {\n    setSelectedImageId(imageId);\n    try {\n      const imageDetails = await ApiService.getImageById(imageId);\n      const imageData = imageDetails.imageData;\n\n      // Use refs to draw the image onto the canvas\n      if (contextRef.current) {\n        const img = new Image();\n        img.src = `data:image/png;base64,${imageData}`;\n        img.onload = () => {\n          var _contextRef$current9;\n          (_contextRef$current9 = contextRef.current) === null || _contextRef$current9 === void 0 ? void 0 : _contextRef$current9.drawImage(img, 0, 0);\n        };\n      }\n    } catch (error) {\n      console.error('Error fetching image data:', error);\n    }\n  };\n  const handleSave = async () => {\n    try {\n      if (canvasRef.current) {\n        const canvas = canvasRef.current;\n        const dataUrl = canvas.toDataURL('image/png');\n        const patientId = sessionStorage.getItem(\"patientId\");\n        const imageCreationData = {\n          id: 0,\n          name: name,\n          description: description,\n          imageData: dataUrl.split(',')[1],\n          // Extract base64 part of the data URL\n          patientId: patientId !== null ? +patientId : 0\n        };\n\n        // Send the drawing data to the server\n        await ApiService.createImage(imageCreationData);\n        console.log('Image saved successfully');\n      }\n    } catch (error) {\n      console.error('Error saving image:', error);\n    }\n  };\n  const handleAddText = () => {\n    if (canvasRef.current) {\n      const ctx = canvasRef.current.getContext('2d');\n      if (ctx) {\n        ctx.font = '32px Arial'; // Set the font size and family\n        ctx.fillStyle = '#000000'; // Set the text color\n        ctx.fillText(text, textPosition.x, textPosition.y);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drawing-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"X Position:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: textPosition.x,\n        onChange: e => setTextPosition({\n          ...textPosition,\n          x: parseInt(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Y Position:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: textPosition.y,\n        onChange: e => setTextPosition({\n          ...textPosition,\n          y: parseInt(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddText,\n        children: \"Add Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        onMouseDown: startDrawing,\n        onMouseUp: finishDrawing,\n        onMouseMove: draw,\n        style: {\n          border: '1px solid black',\n          marginLeft: \"30px\",\n          marginTop: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearAll,\n        children: \"Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"List of Images (info)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImageList, {\n      onSelectImage: handleSelectImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n};\n_s(DrawingForm, \"nJF7W57ufpw9uOhmGg3AYqGfcxw=\");\n_c = DrawingForm;\nexport default DrawingForm;\nexport const ImageViewer = ({\n  imageId\n}) => {\n  _s3();\n  var _s2 = $RefreshSig$();\n  const [imageData, setImageData] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  useEffect(() => {\n    const fetchImageData = async () => {\n      try {\n        const imageDetails = await ApiService.getImageById(imageId);\n        console.log('Received image details:', imageDetails);\n\n        // Assuming the structure is { name: 'Test', id: 1, description: 'Test', imageData: 'base64-encoded-data' }\n        const imageData = imageDetails.imageData;\n        setImageData(imageData);\n      } catch (error) {\n        console.error('Error fetching image data:', error);\n      }\n    };\n    fetchImageData();\n  }, [imageId]);\n  const EditForm = ({\n    imageDetails,\n    onSubmit,\n    onCancel\n  }) => {\n    _s2();\n    const [id, setId] = useState(imageDetails.id);\n    const [patientId, setPatinetId] = useState(imageDetails.patientId);\n    const [name, setName] = useState(imageDetails.name);\n    const [description, setDescription] = useState(imageDetails.description);\n    const [selectedFile, setSelectedFile] = useState(null);\n    const handleSubmit = e => {\n      e.preventDefault();\n      // Perform validation if needed\n\n      // Call onSubmit with updated details\n      onSubmit({\n        id,\n        name,\n        description,\n        imageData: imageDetails.imageData,\n        patientId\n      }, selectedFile);\n    };\n    const handleFileChange = e => {\n      const file = e.target.files && e.target.files[0];\n      setSelectedFile(file);\n    };\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this);\n  };\n  _s2(EditForm, \"omdgjd88PST44p8CTeaze2QaBU0=\");\n  const handleEditSubmit = async updatedDetails => {\n    try {\n      // Make API call to update image details\n      await ApiService.updateImageById(imageId, updatedDetails);\n\n      // Refresh the image details after the update\n      const updatedImageDetails = await ApiService.getImageById(imageId);\n      setImageData(updatedImageDetails);\n\n      // Exit the edit mode\n      setEditMode(false);\n    } catch (error) {\n      console.error('Error updating image details:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: editMode && imageData !== null ?\n    /*#__PURE__*/\n    // Render the edit form\n    _jsxDEV(EditForm, {\n      imageDetails: imageData,\n      onSubmit: updatedDetails => handleEditSubmit(updatedDetails),\n      onCancel: () => setEditMode(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // Render the image\n    _jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 9\n  }, this);\n};\n_s3(ImageViewer, \"1q693cfwAKqh6wm7CQYaH7+pjo8=\");\n_c2 = ImageViewer;\nexport const ImageList = ({\n  onSelectImage\n}) => {\n  _s4();\n  const [images, setImages] = useState([]);\n  const [selectedImageId, setSelectedImageId] = useState(null);\n  useEffect(() => {\n    const patientId = sessionStorage.getItem(\"patientId\");\n    const fetchImages = async () => {\n      try {\n        const imageData = await ApiService.getAllImages(patientId !== null ? +patientId : 0);\n        setImages(imageData);\n      } catch (error) {\n        console.error('Error fetching image data:', error);\n      }\n    };\n    fetchImages();\n  }, []);\n  const handleSelectImage = imageId => {\n    c;\n    onSelectImage(imageId);\n    setSelectedImageId(imageId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"ID: \", image.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Name: \", image.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Description: \", image.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSelectImage(image.id),\n          children: \"Select Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 25\n        }, this)]\n      }, image.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this), selectedImageId && /*#__PURE__*/_jsxDEV(ImageViewer, {\n      imageId: selectedImageId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 9\n  }, this);\n};\n_s4(ImageList, \"6CQ/2gw8FYxAhLSIPEualRtQXzk=\");\n_c3 = ImageList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DrawingForm\");\n$RefreshReg$(_c2, \"ImageViewer\");\n$RefreshReg$(_c3, \"ImageList\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ApiService","jsxDEV","_jsxDEV","DrawingForm","_s","name","setName","description","setDescription","text","setText","textPosition","setTextPosition","x","y","isDrawing","setIsDrawing","canvasRef","contextRef","path","setPath","undoStack","setUndoStack","redoStack","setRedoStack","selectedImageId","setSelectedImageId","canvas","current","width","height","style","context","getContext","lineCap","strokeStyle","lineWidth","startDrawing","nativeEvent","_contextRef$current","_contextRef$current2","offsetX","offsetY","beginPath","moveTo","finishDrawing","draw","lineTo","stroke","redrawCanvas","paths","_contextRef$current3","clearRect","forEach","index","length","_contextRef$current4","_contextRef$current5","_contextRef$current6","_contextRef$current7","clearAll","_contextRef$current8","handleSelectImage","imageId","imageDetails","getImageById","imageData","img","Image","src","onload","_contextRef$current9","drawImage","error","console","handleSave","dataUrl","toDataURL","patientId","sessionStorage","getItem","imageCreationData","id","split","createImage","log","handleAddText","ctx","font","fillStyle","fillText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","parseInt","onClick","ref","onMouseDown","onMouseUp","onMouseMove","border","marginLeft","marginTop","ImageList","onSelectImage","_c","ImageViewer","_s3","_s2","$RefreshSig$","setImageData","editMode","setEditMode","fetchImageData","EditForm","onSubmit","onCancel","setId","setPatinetId","selectedFile","setSelectedFile","handleSubmit","preventDefault","handleFileChange","file","files","accept","handleEditSubmit","updatedDetails","updateImageById","updatedImageDetails","_c2","_s4","images","setImages","fetchImages","getAllImages","c","map","image","_c3","$RefreshReg$"],"sources":["C:/Users/Mohamad H/Desktop/KTH/TIDAA3/Fullstack/labbar/Front/FrontEnd/j-client/src/components/DrawingForm.tsx"],"sourcesContent":["\r\nimport React, { useState, useRef, useEffect  } from 'react';\r\nimport ApiService from \"../services/ApiServices\";\r\nimport {ImageCreation, ImageDetails} from \"../interface/interface\"; // Assuming createImage function exists\r\n\r\n\r\n\r\nconst DrawingForm: React.FC = () => {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [text, setText] = useState(''); // State for text input\r\n    const [textPosition, setTextPosition] = useState({ x: 100, y: 100 }); // Initial position\r\n    const [isDrawing, setIsDrawing] = useState(false);\r\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n    const contextRef = useRef<CanvasRenderingContext2D | null>(null);\r\n    const [path, setPath] = useState<Point[]>([]);\r\n    const [undoStack, setUndoStack] = useState<Point[][]>([]);\r\n    const [redoStack, setRedoStack] = useState<Point[][]>([]);\r\n    const [selectedImageId, setSelectedImageId] = useState<number | null>(null);\r\n\r\n\r\n    interface Point {\r\n        x: number;\r\n        y: number;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        if (canvas) {\r\n            canvas.width = 600;  // Set the desired width\r\n            canvas.height = 500; // Set the desired height\r\n            canvas.style.width = '600px';  // Set the desired width\r\n            canvas.style.height = '500px'; // Set the desired height\r\n\r\n            const context = canvas.getContext('2d');\r\n            if (context) {\r\n\r\n                context.lineCap = 'round';\r\n                context.strokeStyle = 'black';\r\n                context.lineWidth = 5;\r\n                contextRef.current = context;\r\n            }\r\n        }\r\n\r\n    },[])\r\n\r\n    const startDrawing = ({ nativeEvent }: React.MouseEvent<HTMLCanvasElement>) => {\r\n        const { offsetX, offsetY } = nativeEvent;\r\n        contextRef.current?.beginPath();\r\n        contextRef.current?.moveTo(offsetX, offsetY);\r\n        setIsDrawing(true);\r\n        setPath([{ x: offsetX, y: offsetY }]);\r\n    };\r\n\r\n    const finishDrawing = () => {\r\n        if (isDrawing) {\r\n            setUndoStack([...undoStack, path]);\r\n            setRedoStack([]);\r\n        }\r\n        setIsDrawing(false);\r\n    };\r\n\r\n    const draw = ({nativeEvent} : React.MouseEvent<HTMLCanvasElement>) => {\r\n        if(!isDrawing) {\r\n            return\r\n        }\r\n        if(contextRef.current){\r\n            const {offsetX, offsetY} = nativeEvent;\r\n            contextRef.current.lineTo(offsetX, offsetY)\r\n            contextRef.current.stroke()\r\n        }\r\n\r\n    }\r\n\r\n    const redrawCanvas = (paths: Point[][]) => {\r\n        contextRef.current?.clearRect(0, 0, 600, 500);\r\n\r\n        paths.forEach((path, index) => {\r\n            if (index < paths.length - 1) {\r\n                contextRef.current?.beginPath();\r\n                contextRef.current?.moveTo(path[0].x, path[0].y);\r\n                path.forEach(({ x, y }) => {\r\n                    contextRef.current?.lineTo(x, y);\r\n                    contextRef.current?.stroke();\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const clearAll = () => {\r\n        contextRef.current?.clearRect(0, 0, 600, 500);\r\n        setUndoStack([]);\r\n        setRedoStack([]);\r\n    };\r\n\r\n\r\n    const handleSelectImage = async (imageId: number) => {\r\n        setSelectedImageId(imageId);\r\n\r\n        try {\r\n            const imageDetails = await ApiService.getImageById(imageId);\r\n            const imageData = imageDetails.imageData;\r\n\r\n            // Use refs to draw the image onto the canvas\r\n            if (contextRef.current) {\r\n                const img = new Image();\r\n                img.src = `data:image/png;base64,${imageData}`;\r\n                img.onload = () => {\r\n                    contextRef.current?.drawImage(img, 0, 0);\r\n                };\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching image data:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleSave = async () => {\r\n        try {\r\n            if (canvasRef.current) {\r\n                const canvas = canvasRef.current;\r\n                const dataUrl = canvas.toDataURL('image/png');\r\n                const patientId = sessionStorage.getItem(\"patientId\");\r\n                const imageCreationData: ImageCreation = {\r\n                    id: 0,\r\n                    name: name,\r\n                    description: description,\r\n                    imageData: dataUrl.split(',')[1], // Extract base64 part of the data URL\r\n                    patientId: patientId !== null ? +patientId : 0, \r\n                };\r\n\r\n                // Send the drawing data to the server\r\n                await ApiService.createImage(imageCreationData);\r\n                console.log('Image saved successfully');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error saving image:', error);\r\n        }\r\n    };\r\n\r\n    const handleAddText = () => {\r\n        if (canvasRef.current) {\r\n            const ctx = canvasRef.current.getContext('2d');\r\n            if (ctx) {\r\n                ctx.font = '32px Arial'; // Set the font size and family\r\n                ctx.fillStyle = '#000000'; // Set the text color\r\n                ctx.fillText(text, textPosition.x, textPosition.y);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"drawing-form\">\r\n            <div>\r\n                <label>Name:</label>\r\n                <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                <label>Description:</label>\r\n                <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                <label>Text:</label>\r\n                <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\r\n                <label>X Position:</label>\r\n                <input type=\"number\" value={textPosition.x} onChange={(e) => setTextPosition({ ...textPosition, x: parseInt(e.target.value) })} />\r\n                <label>Y Position:</label>\r\n                <input type=\"number\" value={textPosition.y} onChange={(e) => setTextPosition({ ...textPosition, y: parseInt(e.target.value) })} />\r\n                <button onClick={handleAddText}>Add Text</button>\r\n            </div>\r\n            <div>\r\n                <canvas\r\n                    ref={canvasRef}\r\n                    onMouseDown={startDrawing}\r\n                    onMouseUp={finishDrawing}\r\n                    onMouseMove={draw}\r\n                    style={{ border: '1px solid black', marginLeft: \"30px\", marginTop: \"10px\"}}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button onClick={handleSave}>Save Image</button>\r\n            </div>\r\n            <div>\r\n\r\n                <button onClick={clearAll}>Clear All</button>\r\n            </div>\r\n            <h4>List of Images (info)</h4>\r\n            <ImageList onSelectImage={handleSelectImage}></ImageList>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default DrawingForm;\r\n\r\n\r\nexport const ImageViewer: React.FC<{ imageId: number }> = ({ imageId }) => {\r\n    const [imageData, setImageData] = useState(null);\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchImageData = async () => {\r\n            try {\r\n                const imageDetails = await ApiService.getImageById(imageId);\r\n                console.log('Received image details:', imageDetails);\r\n\r\n                // Assuming the structure is { name: 'Test', id: 1, description: 'Test', imageData: 'base64-encoded-data' }\r\n                const imageData = imageDetails.imageData;\r\n\r\n                setImageData(imageData);\r\n            } catch (error) {\r\n                console.error('Error fetching image data:', error);\r\n            }\r\n        };\r\n\r\n        fetchImageData();\r\n    }, [imageId]);\r\n    const EditForm: React.FC<{ imageDetails: ImageCreation; onSubmit: (details: ImageCreation, file: File | null) => void;\r\n        onCancel: () => void }> = ({ imageDetails, onSubmit, onCancel }) => {\r\n        const [id, setId] = useState(imageDetails.id);\r\n        const [patientId, setPatinetId] = useState(imageDetails.patientId);\r\n        const [name, setName] = useState(imageDetails.name);\r\n        const [description, setDescription] = useState(imageDetails.description);\r\n        const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n\r\n        const handleSubmit = (e: React.FormEvent) => {\r\n            e.preventDefault();\r\n            // Perform validation if needed\r\n\r\n            // Call onSubmit with updated details\r\n            onSubmit({id ,name, description, imageData: imageDetails.imageData, patientId}, selectedFile);\r\n        };\r\n\r\n        const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n            const file = e.target.files && e.target.files[0];\r\n            setSelectedFile(file);\r\n        };\r\n\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Name:</label>\r\n                <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n\r\n                <label>Description:</label>\r\n                <textarea value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n\r\n                <label>Image:</label>\r\n                <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n\r\n                <button type=\"submit\">Save</button>\r\n                <button type=\"button\" onClick={onCancel}>Cancel</button>\r\n            </form>\r\n        );\r\n    };\r\n\r\n    const handleEditSubmit = async (updatedDetails: ImageCreation) => {\r\n        try {\r\n            // Make API call to update image details\r\n            await ApiService.updateImageById(imageId, updatedDetails);\r\n\r\n            // Refresh the image details after the update\r\n            const updatedImageDetails = await ApiService.getImageById(imageId);\r\n            setImageData(updatedImageDetails);\r\n\r\n            // Exit the edit mode\r\n            setEditMode(false);\r\n        } catch (error) {\r\n            console.error('Error updating image details:', error);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {editMode && imageData !== null ? (\r\n                // Render the edit form\r\n                <EditForm\r\n                    imageDetails={imageData}\r\n                    onSubmit={(updatedDetails) => handleEditSubmit(updatedDetails)}\r\n                    onCancel={() => setEditMode(false)}\r\n                />\r\n            ) : (\r\n                // Render the image\r\n                <div>\r\n\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport const ImageList: React.FC<{ onSelectImage: (imageId: number) => void }> = ({ onSelectImage }) => {\r\n    const [images, setImages] = useState([]);\r\n    const [selectedImageId, setSelectedImageId] = useState<number | null>(null);\r\n    useEffect(() => {\r\n        const patientId = sessionStorage.getItem(\"patientId\");\r\n        const fetchImages = async () => {\r\n            try {\r\n                const imageData = await ApiService.getAllImages(patientId !== null ? +patientId : 0);\r\n                setImages(imageData);\r\n            } catch (error) {\r\n                console.error('Error fetching image data:', error);\r\n            }\r\n        };\r\n\r\n        fetchImages();\r\n    }, []);\r\n\r\n    const handleSelectImage = (imageId: number) => {\r\n        c\r\n        onSelectImage(imageId)\r\n        setSelectedImageId(imageId);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {images.map((image: any) => (\r\n                    <li key={image.id}>\r\n                        <div>ID: {image.id}</div>\r\n                        <div>Name: {image.name}</div>\r\n                        <div>Description: {image.description}</div>\r\n                        <button onClick={() => handleSelectImage(image.id)}>Select Image</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {selectedImageId && <ImageViewer imageId={selectedImageId} />}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}