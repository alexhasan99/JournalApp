{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamad H\\\\Desktop\\\\KTH\\\\TIDAA3\\\\Fullstack\\\\labbar\\\\Front\\\\FrontEnd\\\\j-client\\\\src\\\\App.js\";\nimport React, { useContext, useState } from 'react';\nimport LoginPage from './components/LoginPage';\nimport PatientPage from './components/PatientPage';\nimport DoctorPage from './components/DoctorPage';\nimport RegisterForm from \"./components/RegisterForm\";\nimport { BrowserRouter, Link, Navigate, Route, Router, Routes, useNavigate } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport { UserProvider } from \"./components/UserSession\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport SelectedPatientPage from \"./components/SelectedPatientPage\";\nimport { httpClient } from './components/HttpClient';\nimport Keycloak from 'keycloak-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet initOptions = {\n  url: \"http://localhost:8090/\",\n  realm: \"Journal\",\n  clientId: \"frontend\"\n};\nlet kc = new Keycloak(initOptions);\nkc.init({\n  onLoad: 'login-required',\n  // Supported values: 'check-sso' , 'login-required'\n  checkLoginIframe: true,\n  pkceMethod: 'S256'\n}).then(auth => {\n  if (!auth) {\n    window.location.reload();\n  } else {\n    /* Remove below logs if you are using this on production */\n    console.info(\"Authenticated\");\n    console.log('auth', auth);\n    console.log('Keycloak', kc);\n    console.log('Access Token', kc.token);\n\n    /* http client will use this header in every request it sends */\n    httpClient.defaults.headers.common['Authorization'] = `Bearer ${kc.token}`;\n    kc.onTokenExpired = () => {\n      console.log('token expired');\n    };\n  }\n}, () => {\n  /* Notify the user if necessary */\n  console.error(\"Authentication Failed\");\n});\nfunction App() {\n  const callBackend = () => {\n    httpClient.get('https://mockbin.com/request');\n  };\n  let user = null;\n  if (sessionStorage.length > 0) {\n    var _user;\n    const storedUser = sessionStorage.getItem('currentUserLoggedIn');\n    user = storedUser ? JSON.parse(storedUser) : null;\n    console.log(\"User: \" + ((_user = user) === null || _user === void 0 ? void 0 : _user.userId));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Secured React App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setInfoMessage(kc.authenticated ? 'Authenticated: TRUE' : 'Authenticated: FALSE');\n            },\n            className: \"m-1 custom-btn-style\",\n            label: \"Is Authenticated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              kc.login();\n            },\n            className: \"m-1 custom-btn-style\",\n            label: \"Login\",\n            severity: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setInfoMessage(kc.token);\n            },\n            className: \"m-1 custom-btn-style\",\n            label: \"Show Access Token\",\n            severity: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setInfoMessage(JSON.stringify(kc.tokenParsed));\n            },\n            className: \"m-1 custom-btn-style\",\n            label: \"Show Parsed Access token\",\n            severity: \"warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setInfoMessage(kc.isTokenExpired(5).toString());\n            },\n            className: \"m-1 custom-btn-style\",\n            label: \"Check Token expired\",\n            severity: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              kc.updateToken(10).then(refreshed => {\n                setInfoMessage('Token Refreshed: ' + refreshed.toString());\n              }, e => {\n                setInfoMessage('Refresh Error');\n              });\n            },\n            className: \"m-1 custom-btn-style\",\n            label: \"Update Token (if about to expire)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(Button, {\n            onClick: callBackend,\n            className: \"m-1 custom-btn-style\",\n            label: \"Send HTTP Request\",\n            severity: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              kc.logout({\n                redirectUri: 'http://localhost:3000/'\n              });\n            },\n            className: \"m-1 custom-btn-style\",\n            label: \"Logout\",\n            severity: \"danger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setInfoMessage(kc.hasRealmRole('admin').toString());\n            },\n            className: \"m-1 custom-btn-style\",\n            label: \"has realm role \\\"Admin\\\"\",\n            severity: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setInfoMessage(kc.hasResourceRole('test').toString());\n            },\n            className: \"m-1 custom-btn-style\",\n            label: \"has client role \\\"test\\\"\",\n            severity: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              wordBreak: 'break-all'\n            },\n            id: \"infoPanel\",\n            children: infoMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nexport default App;\n\n/* return (\r\n     <BrowserRouter>\r\n         <UserProvider>\r\n             <div>\r\n                 <h1>My App</h1>\r\n                 <ul>\r\n                     <li><Link to=\"/\">Home</Link></li>\r\n                     <li><Link to={`/patient/${user?.userId}`}>Patient Page</Link></li>\r\n                     <li><Link to=\"/staff\">Doctor Page</Link></li>\r\n                     <li><Link to=\"/registerForm\">Register</Link></li>\r\n                 </ul>\r\n                 <Routes>\r\n                     <Route path=\"/\" element={<Home/>}/>\r\n                       <Route path=\"/patient/:patientId\" element={<PrivateRoute allowedUserTypes={['PATIENT']} ><PatientPage /></PrivateRoute>} />\r\n                     <Route path=\"/staff/selectedPatient/:patientId\" element={<PrivateRoute  allowedUserTypes={['STAFF']} ><SelectedPatientPage /></PrivateRoute>} />\r\n                     <Route path=\"/staff/:staffId\"  element={<PrivateRoute  allowedUserTypes={['STAFF']} ><DoctorPage /></PrivateRoute>}/>\r\n                     <Route path=\"/registerForm\" element={<RegisterForm />} />\r\n                 </Routes>\r\n             </div>\r\n         </UserProvider>\r\n     </BrowserRouter>\r\n );\r\n}\r\nexport default App;*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useContext","useState","LoginPage","PatientPage","DoctorPage","RegisterForm","BrowserRouter","Link","Navigate","Route","Router","Routes","useNavigate","Home","UserProvider","PrivateRoute","SelectedPatientPage","httpClient","Keycloak","jsxDEV","_jsxDEV","initOptions","url","realm","clientId","kc","init","onLoad","checkLoginIframe","pkceMethod","then","auth","window","location","reload","console","info","log","token","defaults","headers","common","onTokenExpired","error","App","callBackend","get","user","sessionStorage","length","_user","storedUser","getItem","JSON","parse","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Button","onClick","setInfoMessage","authenticated","label","login","severity","stringify","tokenParsed","isTokenExpired","toString","updateToken","refreshed","e","logout","redirectUri","hasRealmRole","hasResourceRole","Card","style","wordBreak","id","infoMessage","_c","$RefreshReg$"],"sources":["C:/Users/Mohamad H/Desktop/KTH/TIDAA3/Fullstack/labbar/Front/FrontEnd/j-client/src/App.js"],"sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport LoginPage from './components/LoginPage';\r\nimport PatientPage from './components/PatientPage';\r\nimport DoctorPage from './components/DoctorPage';\r\nimport RegisterForm from \"./components/RegisterForm\";\r\nimport {BrowserRouter, Link, Navigate, Route, Router, Routes, useNavigate} from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport {UserProvider} from \"./components/UserSession\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport SelectedPatientPage from \"./components/SelectedPatientPage\";\r\nimport { httpClient } from './components/HttpClient';\r\nimport Keycloak from 'keycloak-js';\r\n\r\nlet initOptions = {\r\n    url: \"http://localhost:8090/\",\r\n    realm: \"Journal\",\r\n    clientId: \"frontend\",\r\n  }\r\n  \r\n  let kc = new Keycloak(initOptions);\r\n  \r\n  kc.init({\r\n    onLoad: 'login-required', // Supported values: 'check-sso' , 'login-required'\r\n    checkLoginIframe: true,\r\n    pkceMethod: 'S256'\r\n  }).then((auth) => {\r\n    if (!auth) {\r\n      window.location.reload();\r\n    } else {\r\n      /* Remove below logs if you are using this on production */\r\n      console.info(\"Authenticated\");\r\n      console.log('auth', auth)\r\n      console.log('Keycloak', kc)\r\n      console.log('Access Token', kc.token)\r\n  \r\n      /* http client will use this header in every request it sends */\r\n      httpClient.defaults.headers.common['Authorization'] = `Bearer ${kc.token}`;\r\n  \r\n      kc.onTokenExpired = () => {\r\n        console.log('token expired')\r\n      }\r\n    }\r\n  }, () => {\r\n    /* Notify the user if necessary */\r\n    console.error(\"Authentication Failed\");\r\n  });\r\n\r\nfunction App() {\r\n\r\n    const callBackend = () => {\r\n        httpClient.get('https://mockbin.com/request')\r\n    \r\n      };\r\n\r\n    let user = null;\r\n    if (sessionStorage.length > 0) {\r\n        const storedUser = sessionStorage.getItem('currentUserLoggedIn');\r\n        user = storedUser ? JSON.parse(storedUser) : null;\r\n        console.log(\"User: \" + user?.userId);\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n          <div className='grid'>\r\n            <div className='col-12'>\r\n              <h1>My Secured React App</h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"grid\">\r\n    \r\n          </div>\r\n    \r\n          <div className='grid'>\r\n            <div className='col-1'></div>\r\n            <div className='col-2'>\r\n              <div className=\"col\">\r\n                <Button onClick={() => { setInfoMessage(kc.authenticated ? 'Authenticated: TRUE' : 'Authenticated: FALSE') }}\r\n                  className=\"m-1 custom-btn-style\"\r\n                  label='Is Authenticated' />\r\n    \r\n                <Button onClick={() => { kc.login() }}\r\n                  className='m-1 custom-btn-style'\r\n                  label='Login'\r\n                  severity=\"success\" />\r\n    \r\n                <Button onClick={() => { setInfoMessage(kc.token) }}\r\n                  className=\"m-1 custom-btn-style\"\r\n                  label='Show Access Token'\r\n                  severity=\"info\" />\r\n    \r\n                <Button onClick={() => { setInfoMessage(JSON.stringify(kc.tokenParsed)) }}\r\n                  className=\"m-1 custom-btn-style\"\r\n                  label='Show Parsed Access token'\r\n                  severity=\"warning\" />\r\n    \r\n                <Button onClick={() => { setInfoMessage(kc.isTokenExpired(5).toString()) }}\r\n                  className=\"m-1 custom-btn-style\"\r\n                  label='Check Token expired'\r\n                  severity=\"info\" />\r\n    \r\n                <Button onClick={() => { kc.updateToken(10).then((refreshed) => { setInfoMessage('Token Refreshed: ' + refreshed.toString()) }, (e) => { setInfoMessage('Refresh Error') }) }}\r\n                  className=\"m-1 custom-btn-style\"\r\n                  label='Update Token (if about to expire)' />  {/** 10 seconds */}\r\n    \r\n                <Button onClick={callBackend}\r\n                  className='m-1 custom-btn-style'\r\n                  label='Send HTTP Request'\r\n                  severity=\"success\" />\r\n    \r\n                <Button onClick={() => { kc.logout({ redirectUri: 'http://localhost:3000/' }) }}\r\n                  className=\"m-1 custom-btn-style\"\r\n                  label='Logout'\r\n                  severity=\"danger\" />\r\n    \r\n                <Button onClick={() => { setInfoMessage(kc.hasRealmRole('admin').toString()) }}\r\n                  className=\"m-1 custom-btn-style\"\r\n                  label='has realm role \"Admin\"'\r\n                  severity=\"info\" />\r\n    \r\n                <Button onClick={() => { setInfoMessage(kc.hasResourceRole('test').toString()) }}\r\n                  className=\"m-1 custom-btn-style\"\r\n                  label='has client role \"test\"'\r\n                  severity=\"info\" />\r\n    \r\n              </div>\r\n            </div>\r\n            <div className='col-6'>\r\n    \r\n              <Card>\r\n                <p style={{ wordBreak: 'break-all' }} id='infoPanel'>\r\n                  {infoMessage}\r\n                </p>\r\n              </Card>\r\n            </div>\r\n    \r\n            <div className='col-2'></div>\r\n          </div>\r\n    \r\n    \r\n    \r\n        </div>\r\n      );\r\n    }\r\n    \r\n    \r\n    export default App;\r\n    \r\n\r\n   /* return (\r\n        <BrowserRouter>\r\n            <UserProvider>\r\n                <div>\r\n                    <h1>My App</h1>\r\n                    <ul>\r\n                        <li><Link to=\"/\">Home</Link></li>\r\n                        <li><Link to={`/patient/${user?.userId}`}>Patient Page</Link></li>\r\n                        <li><Link to=\"/staff\">Doctor Page</Link></li>\r\n                        <li><Link to=\"/registerForm\">Register</Link></li>\r\n                    </ul>\r\n                    <Routes>\r\n                        <Route path=\"/\" element={<Home/>}/>\r\n\r\n                        <Route path=\"/patient/:patientId\" element={<PrivateRoute allowedUserTypes={['PATIENT']} ><PatientPage /></PrivateRoute>} />\r\n                        <Route path=\"/staff/selectedPatient/:patientId\" element={<PrivateRoute  allowedUserTypes={['STAFF']} ><SelectedPatientPage /></PrivateRoute>} />\r\n                        <Route path=\"/staff/:staffId\"  element={<PrivateRoute  allowedUserTypes={['STAFF']} ><DoctorPage /></PrivateRoute>}/>\r\n                        <Route path=\"/registerForm\" element={<RegisterForm />} />\r\n                    </Routes>\r\n                </div>\r\n            </UserProvider>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}