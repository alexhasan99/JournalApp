{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamad H\\\\Desktop\\\\KTH\\\\TIDAA3\\\\Fullstack\\\\labbar\\\\Front\\\\FrontEnd\\\\j-client\\\\src\\\\components\\\\PatientSearchForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ApiService from '../services/ApiServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientSearchForm = ({\n  onSearchComplete\n}) => {\n  _s();\n  const [searchCriteria, setSearchCriteria] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleSearch = async () => {\n    try {\n      let patients = [];\n      if (searchCriteria === 'Name') {\n        patients = await ApiService.searchPatientsByName(searchValue);\n      } else if (searchCriteria === 'Gender') {\n        // Validera att angivet kön är antingen \"Male\" eller \"Female\"\n        if (searchValue.toLowerCase() !== 'male' && searchValue.toLowerCase() !== 'female') {\n          setErrorMessage('Please enter \"Male\" or \"Female\"');\n          return;\n        }\n        patients = await ApiService.searchPatientsByGender(searchValue);\n      } else if (searchCriteria === 'Condition') {\n        patients = await ApiService.searchPatientsByCondition(searchValue);\n      }\n      onSearchComplete(patients);\n      setErrorMessage(''); // Återställ felmeddelandet när sökningen lyckas\n    } catch (error) {\n      console.error('Error searching patients:', error);\n    }\n  };\n\n  // Återställ felmeddelandet när användaren ändrar sökkriteriet eller sökvärdet\n  useEffect(() => {\n    setErrorMessage('');\n  }, [searchCriteria, searchValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Search by:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: searchCriteria,\n        onChange: e => setSearchCriteria(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Criteria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Gender\",\n          children: \"Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Condition\",\n          children: \"Condition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchValue,\n      onChange: e => setSearchValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(PatientSearchForm, \"kb25UnbMuTAF+NCF9tCASHmUnYA=\");\n_c = PatientSearchForm;\nexport default PatientSearchForm;\nvar _c;\n$RefreshReg$(_c, \"PatientSearchForm\");","map":{"version":3,"names":["React","useState","useEffect","ApiService","jsxDEV","_jsxDEV","PatientSearchForm","onSearchComplete","_s","searchCriteria","setSearchCriteria","searchValue","setSearchValue","errorMessage","setErrorMessage","handleSearch","patients","searchPatientsByName","toLowerCase","searchPatientsByGender","searchPatientsByCondition","error","console","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Mohamad H/Desktop/KTH/TIDAA3/Fullstack/labbar/Front/FrontEnd/j-client/src/components/PatientSearchForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { PatientForSearch } from '../interface/interface';\r\nimport ApiService from '../services/ApiServices';\r\n\r\ninterface PatientSearchFormProps {\r\n    onSearchComplete: (patients: PatientForSearch[]) => void;\r\n}\r\n\r\nconst PatientSearchForm: React.FC<PatientSearchFormProps> = ({ onSearchComplete }) => {\r\n    const [searchCriteria, setSearchCriteria] = useState('');\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const handleSearch = async () => {\r\n        try {\r\n            let patients: PatientForSearch[] = [];\r\n            if (searchCriteria === 'Name') {\r\n                patients = await ApiService.searchPatientsByName(searchValue);\r\n            } else if (searchCriteria === 'Gender') {\r\n                // Validera att angivet kön är antingen \"Male\" eller \"Female\"\r\n                if (searchValue.toLowerCase() !== 'male' && searchValue.toLowerCase() !== 'female') {\r\n                    setErrorMessage('Please enter \"Male\" or \"Female\"');\r\n                    return;\r\n                }\r\n                patients = await ApiService.searchPatientsByGender(searchValue);\r\n            } else if (searchCriteria === 'Condition') {\r\n                patients = await ApiService.searchPatientsByCondition(searchValue);\r\n            }\r\n            onSearchComplete(patients);\r\n            setErrorMessage(''); // Återställ felmeddelandet när sökningen lyckas\r\n        } catch (error) {\r\n            console.error('Error searching patients:', error);\r\n        }\r\n    };\r\n\r\n    // Återställ felmeddelandet när användaren ändrar sökkriteriet eller sökvärdet\r\n    useEffect(() => {\r\n        setErrorMessage('');\r\n    }, [searchCriteria, searchValue]);\r\n\r\n    return (\r\n        <div>\r\n            <label>\r\n                Search by:\r\n                <select value={searchCriteria} onChange={(e) => setSearchCriteria(e.target.value)}>\r\n                    <option value=\"\">Select Criteria</option>\r\n                    <option value=\"Name\">Name</option>\r\n                    <option value=\"Gender\">Gender</option>\r\n                    <option value=\"Condition\">Condition</option>\r\n                </select>\r\n            </label>\r\n            <input type=\"text\" value={searchValue} onChange={(e) => setSearchValue(e.target.value)} />\r\n            <button onClick={handleSearch}>Search</button>\r\n            {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientSearchForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}